<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>スレッド詳細</title>
  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore-compat.js"></script>
  <script>
    // Firebase初期化
    const firebaseConfig = {
      // ... 同じ設定 ...
    };
    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    let companyId = "";
    let threadId = "";

    window.onload = () => {
      const params = new URLSearchParams(location.search);
      companyId = params.get('company');
      threadId = params.get('thread');
      if (!companyId || !threadId) {
        document.body.innerHTML = "パラメータが不足しています。";
        return;
      }
      loadThreadData();
      loadComments();
    };

    // スレッド本体を取得
    async function loadThreadData() {
      const docRef = db
        .collection("companies")
        .doc(companyId)
        .collection("threads")
        .doc(threadId);
      const snap = await docRef.get();
      if (!snap.exists) {
        document.getElementById("threadInfo").innerHTML = "データがありません";
        return;
      }
      const data = snap.data();
      document.getElementById("threadInfo").innerHTML = `
        <h2>スレッド詳細</h2>
        <p>販売店番号: ${companyId}</p>
        <p>団体名: ${data.groupName || "不明"}</p>
        <p>出発日: ${data.departureDate || "-"}</p>
      `;
    }

    // コメント一覧をリアルタイム取得
    function loadComments() {
      db.collection("companies")
        .doc(companyId)
        .collection("threads")
        .doc(threadId)
        .collection("comments")
        .orderBy("timestamp", "asc")
        .onSnapshot(snapshot => {
          const commentsDiv = document.getElementById("commentsSection");
          commentsDiv.innerHTML = "";
          snapshot.forEach(doc => {
            const cData = doc.data();
            const timeStr = cData.timestamp ? cData.timestamp.toDate().toLocaleString() : "";
            commentsDiv.innerHTML += `<p><strong>${cData.name}</strong>: ${cData.text} (${timeStr})</p>`;
          });
        });
    }

    // コメント投稿
    async function submitComment() {
      const newComment = document.getElementById("newComment").value.trim();
      if (!newComment) {
        alert("コメントを入力してください。");
        return;
      }
      try {
        await db
          .collection("companies")
          .doc(companyId)
          .collection("threads")
          .doc(threadId)
          .collection("comments")
          .add({
            name: "会社A or 販売店", // ここでユーザー判定
            text: newComment,
            timestamp: new Date()
          });
        document.getElementById("newComment").value = "";
      } catch (err) {
        console.error("コメント投稿失敗:", err);
      }
    }
  </script>
</head>
<body>
  <div id="threadInfo">読み込み中...</div>
  <h3>コメント一覧</h3>
  <div id="commentsSection"></div>

  <h3>新しいコメントを投稿</h3>
  <textarea id="newComment"></textarea><br>
  <button onclick="submitComment()">投稿</button>
</body>
</html>
